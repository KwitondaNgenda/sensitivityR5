% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rfunctions.R
\name{love_plot}
\alias{love_plot}
\title{Love plots with `designmatch`,`matchIt`,`Matching` Object}
\usage{
love_plot(X, data, covList, legend_position = "topright", treat = NULL)
}
\arguments{
\item{data}{dataset before its preprocessed.}

\item{covList}{a vector of covariates to be balanced.}

\item{treat}{Exposure variable name}

\item{x}{A `designmatch`,`matchIt`,`Matching` Object}
}
\value{
a plot of standardized difference.
}
\description{
## Love plot with `designmatch` package object
}
\examples{
data("lalonde",package = "cobalt")
attach(lalonde)

## Treatment indicator
t_ind =lalonde$treat

## Distance matrix
dist_mat = NULL

## Subset matching weight.
subset_weight = 1

# Moment balance: constrain differences in means to be at most .05 standard deviations apart
mom_covs = cbind(age, educ, black, hispan, married, nodegree, re74, re75)
mom_tols = round(absstddif(mom_covs, t_ind, .05), 2)
mom = list(covs = mom_covs, tols = mom_tols)

## Fine balance
fine_covs = cbind(black, hispan, married, nodegree)
fine = list(covs = fine_covs)

## Exact matching
exact_covs = cbind(black)
exact = list(covs = exact_covs)

## Solver options
t_max = 60*5
solver = "glpk"
approximate = 1
solver = list(name = solver, t_max = t_max, approximate = approximate,round_cplex = 0, trace = 0)

## Cardinality matching
out = bmatch(t_ind = t_ind, dist_mat = dist_mat, subset_weight = subset_weight, mom = mom, fine = fine, exact = exact, solver = solver)

# Indices of the treated units and matched controls
t_id = out$t_id
c_id = out$c_id
detach(lalonde)

# Example of cardinality Matching
love_plot(X =out, data = lalonde , covList=c("age", "educ", "black", "hispan", "married", "nodegree", "re74", "re75"))

# Example with  MatchIt package
# data("lalonde") if not yet loaded
covs0 <- subset(lalonde, select = -c(treat, re78, nodegree, married))
# Nearest neighbor 1:1 matching with replacement
library("MatchIt") #if not yet loaded
m.out <- matchit(f.build("treat", covs0), data = lalonde, method = "nearest", replace = TRUE)
love_plot(X =m.out, data = lalonde , covList=c("age", "educ", "black", "hispan", "married", "nodegree", "re74", "re75"))

# Example with Matching package

library("Matching")
#data("lalonde") #If not yet loaded
covs0 <- subset(lalonde, select = -c(treat, re78, nodegree, married))
fit <- glm(f.build("treat", covs0), data = lalonde, family = "binomial")
p.score <- fit$fitted.values
match.out <- Match(Tr = lalonde$treat, X = p.score, estimand = "ATT")
std_dif_data =bal.tab(match.out, formula = f.build("treat", covs0), data = lalonde)
love_plot(X, data = lalonde , covList=c("age", "educ", "black", "hispan", "re74", "re75"),treat = "treat")
}

